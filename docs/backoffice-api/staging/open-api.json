{
  "openapi": "3.0.3",
  "info": {
    "title": "API Heathwords",
    "description": "API Heathwords",
    "version": "2.9.0"
  },
  "servers": [
    {
      "url": "https://staging.api.caidr.co",
      "description": "Staging"
    },
    {
      "url": "https://api.caidr.co",
      "description": "Production"
    }
  ],
  "paths": {
    "/health": {
      "get": {
        "summary": "Check server health",
        "tags": [
          "Health"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/healthResponse"
                }
              }
            }
          }
        }
      }
    },
    "/healthc": {
      "get": {
        "summary": "Check server health",
        "tags": [
          "Health"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/healthResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/pdf": {
      "post": {
        "summary": "Generate pdf file",
        "tags": [
          "Pdf"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/pdfGenerationRequestBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/pdfGenerationResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/auth/request-code": {
      "post": {
        "summary": "Auth request code",
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/postLoginRequesBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/userAuthRequestCodeResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/auth/login": {
      "post": {
        "summary": "Auth login",
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/postLoginBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/userAuthenticatedResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/auth/refresh-token": {
      "post": {
        "summary": "Auth refresh token",
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/postRefreshTokenBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/userAuthenticatedResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/me": {
      "get": {
        "summary": "Get me info",
        "tags": [
          "Me"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/meResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/httpError"
                },
                "examples": {
                  "error": {
                    "$ref": "#/components/examples/unauthorizedError"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/files/upload-url": {
      "post": {
        "summary": "File upload url request",
        "tags": [
          "File"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/postFileUploadUrlBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/fileUploadUrlResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/files": {
      "get": {
        "summary": "List and filter all files",
        "tags": [
          "File"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "number",
              "format": "float",
              "minimum": 1,
              "maximum": 500,
              "default": 10
            },
            "required": false
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "number",
              "format": "float",
              "minimum": 1,
              "default": 1
            },
            "required": false
          },
          {
            "in": "query",
            "name": "order",
            "schema": {
              "type": "string",
              "enum": [
                "ASC",
                "DESC"
              ],
              "default": "DESC"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "string",
              "enum": [
                "created",
                "name",
                "content_type"
              ],
              "default": "created"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "ids",
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12}(,[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12})*$"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "search_name",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "search_user",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "created_before",
            "schema": {
              "type": "string",
              "pattern": "\\d+",
              "description": "MS since epoch",
              "example": "1649155901169"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "created_after",
            "schema": {
              "type": "string",
              "pattern": "\\d+",
              "description": "MS since epoch",
              "example": "1649155901169"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/listFileResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/httpError"
                },
                "examples": {
                  "error": {
                    "$ref": "#/components/examples/unauthorizedError"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/files/{id}": {
      "get": {
        "summary": "Get file by id",
        "tags": [
          "File"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/fileResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/httpError"
                },
                "examples": {
                  "error": {
                    "$ref": "#/components/examples/unauthorizedError"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/libraries": {
      "get": {
        "summary": "List and filter all libraries",
        "tags": [
          "Library"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "number",
              "format": "float",
              "minimum": 1,
              "maximum": 500,
              "default": 10
            },
            "required": false
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "number",
              "format": "float",
              "minimum": 1,
              "default": 1
            },
            "required": false
          },
          {
            "in": "query",
            "name": "order",
            "schema": {
              "type": "string",
              "enum": [
                "ASC",
                "DESC"
              ],
              "default": "DESC"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "string",
              "enum": [
                "updated",
                "created",
                "summary",
                "country",
                "draft",
                "content_type"
              ],
              "default": "updated"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "ids",
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12}(,[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12})*$"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "draft",
            "schema": {
              "type": "boolean"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "content_type",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "search_summary",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "country",
            "schema": {
              "type": "string",
              "enum": [
                "gb",
                "us"
              ]
            },
            "required": false
          },
          {
            "in": "query",
            "name": "created_before",
            "schema": {
              "type": "string",
              "pattern": "\\d+",
              "description": "MS since epoch",
              "example": "1649155901169"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "created_after",
            "schema": {
              "type": "string",
              "pattern": "\\d+",
              "description": "MS since epoch",
              "example": "1649155901169"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/listLibraryResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/httpError"
                },
                "examples": {
                  "error": {
                    "$ref": "#/components/examples/unauthorizedError"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a library",
        "tags": [
          "Library"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/postLibraryBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/libraryResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/httpError"
                },
                "examples": {
                  "error": {
                    "$ref": "#/components/examples/unauthorizedError"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/_libraries": {
      "post": {
        "summary": "List and filter all libraries",
        "tags": [
          "Library"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/listLibrariesBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/listLibraryResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/httpError"
                },
                "examples": {
                  "error": {
                    "$ref": "#/components/examples/unauthorizedError"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/libraries/{id}": {
      "get": {
        "summary": "Get library by id",
        "tags": [
          "Library"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/libraryResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/httpError"
                },
                "examples": {
                  "error": {
                    "$ref": "#/components/examples/unauthorizedError"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update a library",
        "tags": [
          "Library"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/postLibraryBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/libraryResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/httpError"
                },
                "examples": {
                  "error": {
                    "$ref": "#/components/examples/unauthorizedError"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/libraries/{id}/link_products": {
      "put": {
        "summary": "Link a library to recommended products",
        "tags": [
          "Library"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/linkLibraryProductsBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/libraryResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/httpError"
                },
                "examples": {
                  "error": {
                    "$ref": "#/components/examples/unauthorizedError"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/users": {
      "get": {
        "summary": "List and filter all users",
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "number",
              "format": "float",
              "minimum": 1,
              "maximum": 500,
              "default": 10
            },
            "required": false
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "number",
              "format": "float",
              "minimum": 1,
              "default": 1
            },
            "required": false
          },
          {
            "in": "query",
            "name": "order",
            "schema": {
              "type": "string",
              "enum": [
                "ASC",
                "DESC"
              ],
              "default": "DESC"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "string",
              "enum": [
                "updated",
                "created",
                "name",
                "role"
              ],
              "default": "updated"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "ids",
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12}(,[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12})*$"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "email",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "search_name",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "role",
            "schema": {
              "type": "string",
              "enum": [
                "admin",
                "editor"
              ]
            },
            "required": false
          },
          {
            "in": "query",
            "name": "created_before",
            "schema": {
              "type": "string",
              "pattern": "\\d+",
              "description": "MS since epoch",
              "example": "1649155901169"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "created_after",
            "schema": {
              "type": "string",
              "pattern": "\\d+",
              "description": "MS since epoch",
              "example": "1649155901169"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/listUserResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/httpError"
                },
                "examples": {
                  "error": {
                    "$ref": "#/components/examples/unauthorizedError"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create an user",
        "tags": [
          "User"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/postUserBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/userResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/httpError"
                },
                "examples": {
                  "error": {
                    "$ref": "#/components/examples/unauthorizedError"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/_users": {
      "post": {
        "summary": "List and filter all users",
        "tags": [
          "User"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/listUsersBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/listUserResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/httpError"
                },
                "examples": {
                  "error": {
                    "$ref": "#/components/examples/unauthorizedError"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/users/{id}": {
      "get": {
        "summary": "Get user by id",
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/userResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/httpError"
                },
                "examples": {
                  "error": {
                    "$ref": "#/components/examples/unauthorizedError"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update an user",
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/postUserBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/userResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/httpError"
                },
                "examples": {
                  "error": {
                    "$ref": "#/components/examples/unauthorizedError"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/editors": {
      "get": {
        "summary": "List and filter all editors",
        "tags": [
          "Editor"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "number",
              "format": "float",
              "minimum": 1,
              "maximum": 500,
              "default": 10
            },
            "required": false
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "number",
              "format": "float",
              "minimum": 1,
              "default": 1
            },
            "required": false
          },
          {
            "in": "query",
            "name": "order",
            "schema": {
              "type": "string",
              "enum": [
                "ASC",
                "DESC"
              ],
              "default": "DESC"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "string",
              "enum": [
                "updated",
                "name",
                "title",
                "created"
              ],
              "default": "updated"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "ids",
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12}(,[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12})*$"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "search_name",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "created_before",
            "schema": {
              "type": "string",
              "pattern": "\\d+",
              "description": "MS since epoch",
              "example": "1649155901169"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "created_after",
            "schema": {
              "type": "string",
              "pattern": "\\d+",
              "description": "MS since epoch",
              "example": "1649155901169"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/listEditorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/httpError"
                },
                "examples": {
                  "error": {
                    "$ref": "#/components/examples/unauthorizedError"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create an editor",
        "tags": [
          "Editor"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/postEditorBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/editorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/httpError"
                },
                "examples": {
                  "error": {
                    "$ref": "#/components/examples/unauthorizedError"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/_editors": {
      "post": {
        "summary": "List and filter all editors",
        "tags": [
          "Editor"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/listEditorsBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/listEditorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/httpError"
                },
                "examples": {
                  "error": {
                    "$ref": "#/components/examples/unauthorizedError"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/editors/{id}": {
      "get": {
        "summary": "Get editor by id",
        "tags": [
          "Editor"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "number",
              "format": "float"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/editorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/httpError"
                },
                "examples": {
                  "error": {
                    "$ref": "#/components/examples/unauthorizedError"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update an editor",
        "tags": [
          "Editor"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "number",
              "format": "float"
            },
            "required": true
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/postEditorBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/editorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/httpError"
                },
                "examples": {
                  "error": {
                    "$ref": "#/components/examples/unauthorizedError"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/activity_logs": {
      "get": {
        "summary": "List and filter all activity logs",
        "tags": [
          "Activity Log"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "number",
              "format": "float",
              "minimum": 1,
              "maximum": 500,
              "default": 10
            },
            "required": false
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "number",
              "format": "float",
              "minimum": 1,
              "default": 1
            },
            "required": false
          },
          {
            "in": "query",
            "name": "order",
            "schema": {
              "type": "string",
              "enum": [
                "ASC",
                "DESC"
              ],
              "default": "DESC"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "string",
              "enum": [
                "created"
              ],
              "default": "created"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "ids",
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12}(,[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12})*$"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "user_ids",
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12}(,[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12})*$"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "action",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "asset_type",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "created_before",
            "schema": {
              "type": "string",
              "pattern": "\\d+",
              "description": "MS since epoch",
              "example": "1649155901169"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "created_after",
            "schema": {
              "type": "string",
              "pattern": "\\d+",
              "description": "MS since epoch",
              "example": "1649155901169"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/listActivityLogResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/httpError"
                },
                "examples": {
                  "error": {
                    "$ref": "#/components/examples/unauthorizedError"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/_activity_logs": {
      "post": {
        "summary": "List and filter all activity logs",
        "tags": [
          "Activity Log"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/listActivityLogsBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/listActivityLogResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/httpError"
                },
                "examples": {
                  "error": {
                    "$ref": "#/components/examples/unauthorizedError"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/categories": {
      "get": {
        "summary": "List and filter all categories",
        "tags": [
          "Category"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "number",
              "format": "float",
              "minimum": 1,
              "maximum": 500,
              "default": 10
            },
            "required": false
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "number",
              "format": "float",
              "minimum": 1,
              "default": 1
            },
            "required": false
          },
          {
            "in": "query",
            "name": "order",
            "schema": {
              "type": "string",
              "enum": [
                "ASC",
                "DESC"
              ],
              "default": "DESC"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "string",
              "enum": [
                "updated",
                "created",
                "name",
                "display_order"
              ],
              "default": "updated"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "ids",
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12}(,[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12})*$"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "search_name",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "created_before",
            "schema": {
              "type": "string",
              "pattern": "\\d+",
              "description": "MS since epoch",
              "example": "1649155901169"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "created_after",
            "schema": {
              "type": "string",
              "pattern": "\\d+",
              "description": "MS since epoch",
              "example": "1649155901169"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/listCategoryResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/httpError"
                },
                "examples": {
                  "error": {
                    "$ref": "#/components/examples/unauthorizedError"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a category",
        "tags": [
          "Category"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/postCategoryBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/categoryResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/httpError"
                },
                "examples": {
                  "error": {
                    "$ref": "#/components/examples/unauthorizedError"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/_categories": {
      "post": {
        "summary": "List and filter all categories",
        "tags": [
          "Category"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/listCategoriesBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/listCategoryResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/httpError"
                },
                "examples": {
                  "error": {
                    "$ref": "#/components/examples/unauthorizedError"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/categories/{id}": {
      "get": {
        "summary": "Get category by id",
        "tags": [
          "Category"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                }
              },
              "required": [
                "id"
              ],
              "additionalProperties": false
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/categoryResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/httpError"
                },
                "examples": {
                  "error": {
                    "$ref": "#/components/examples/unauthorizedError"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update a category",
        "tags": [
          "Category"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                }
              },
              "required": [
                "id"
              ],
              "additionalProperties": false
            },
            "required": false
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/postCategoryBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/categoryResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/httpError"
                },
                "examples": {
                  "error": {
                    "$ref": "#/components/examples/unauthorizedError"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/_settings/groups": {
      "get": {
        "summary": "List all setting groups",
        "tags": [
          "Setting"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/listSettingGroupResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/httpError"
                },
                "examples": {
                  "error": {
                    "$ref": "#/components/examples/unauthorizedError"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/settings": {
      "get": {
        "summary": "List and filter all settings",
        "tags": [
          "Setting"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "number",
              "format": "float",
              "minimum": 1,
              "maximum": 500,
              "default": 10
            },
            "required": false
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "number",
              "format": "float",
              "minimum": 1,
              "default": 1
            },
            "required": false
          },
          {
            "in": "query",
            "name": "order",
            "schema": {
              "type": "string",
              "enum": [
                "ASC",
                "DESC"
              ],
              "default": "DESC"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "string",
              "enum": [
                "updated",
                "created",
                "value",
                "id"
              ],
              "default": "updated"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "ids",
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12}(,[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12})*$"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "group_id",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "search_name",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "all",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "created_before",
            "schema": {
              "type": "string",
              "pattern": "\\d+",
              "description": "MS since epoch",
              "example": "1649155901169"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "created_after",
            "schema": {
              "type": "string",
              "pattern": "\\d+",
              "description": "MS since epoch",
              "example": "1649155901169"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/listSettingResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/httpError"
                },
                "examples": {
                  "error": {
                    "$ref": "#/components/examples/unauthorizedError"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a setting",
        "tags": [
          "Setting"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/postSettingBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/settingResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/httpError"
                },
                "examples": {
                  "error": {
                    "$ref": "#/components/examples/unauthorizedError"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/_settings": {
      "post": {
        "summary": "List and filter all settings",
        "tags": [
          "Setting"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/listSettingsBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/listSettingResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/httpError"
                },
                "examples": {
                  "error": {
                    "$ref": "#/components/examples/unauthorizedError"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/settings/{id}": {
      "get": {
        "summary": "Get setting by id",
        "tags": [
          "Setting"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/settingResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/httpError"
                },
                "examples": {
                  "error": {
                    "$ref": "#/components/examples/unauthorizedError"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update a setting",
        "tags": [
          "Setting"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/postSettingUpdateBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/settingResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/httpError"
                },
                "examples": {
                  "error": {
                    "$ref": "#/components/examples/unauthorizedError"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/products": {
      "get": {
        "summary": "List and filter all products",
        "tags": [
          "Product"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "number",
              "format": "float",
              "minimum": 1,
              "maximum": 500,
              "default": 10
            },
            "required": false
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "number",
              "format": "float",
              "minimum": 1,
              "default": 1
            },
            "required": false
          },
          {
            "in": "query",
            "name": "order",
            "schema": {
              "type": "string",
              "enum": [
                "ASC",
                "DESC"
              ],
              "default": "DESC"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "string",
              "enum": [
                "created",
                "updated",
                "name",
                "country",
                "draft",
                "price",
                "quantity"
              ],
              "default": "created"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "ids",
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12}(,[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12})*$"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "product_type",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "search_name",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "is_popular",
            "schema": {
              "type": "boolean"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "country",
            "schema": {
              "type": "string",
              "enum": [
                "gb",
                "us"
              ]
            },
            "required": false
          },
          {
            "in": "query",
            "name": "created_before",
            "schema": {
              "type": "string",
              "pattern": "\\d+",
              "description": "MS since epoch",
              "example": "1649155901169"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "created_after",
            "schema": {
              "type": "string",
              "pattern": "\\d+",
              "description": "MS since epoch",
              "example": "1649155901169"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/listProductResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/httpError"
                },
                "examples": {
                  "error": {
                    "$ref": "#/components/examples/unauthorizedError"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a product",
        "tags": [
          "Product"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/postProductBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/productResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/httpError"
                },
                "examples": {
                  "error": {
                    "$ref": "#/components/examples/unauthorizedError"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/_products": {
      "post": {
        "summary": "List and filter all products",
        "tags": [
          "Product"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/listProductsBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/listProductResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/httpError"
                },
                "examples": {
                  "error": {
                    "$ref": "#/components/examples/unauthorizedError"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/products/{id}": {
      "get": {
        "summary": "Get product by id",
        "tags": [
          "Product"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/productResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/httpError"
                },
                "examples": {
                  "error": {
                    "$ref": "#/components/examples/unauthorizedError"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update a product",
        "tags": [
          "Product"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/postProductBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/productResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/httpError"
                },
                "examples": {
                  "error": {
                    "$ref": "#/components/examples/unauthorizedError"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/gateway/editors": {
      "get": {
        "summary": "List all editors",
        "tags": [
          "Gateway"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/listEditorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/httpError"
                },
                "examples": {
                  "error": {
                    "$ref": "#/components/examples/unauthorizedError"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/gateway/editors/{id}": {
      "get": {
        "summary": "Get editor by id",
        "tags": [
          "Gateway"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/editorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/httpError"
                },
                "examples": {
                  "error": {
                    "$ref": "#/components/examples/unauthorizedError"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/gateway/libraries": {
      "get": {
        "summary": "List all libraries",
        "tags": [
          "Gateway"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/listLibraryResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/httpError"
                },
                "examples": {
                  "error": {
                    "$ref": "#/components/examples/unauthorizedError"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/gateway/libraries/alphabetized": {
      "get": {
        "summary": "List all libraries alphabetized",
        "tags": [
          "Gateway"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/listLibraryAlphabetizedResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/httpError"
                },
                "examples": {
                  "error": {
                    "$ref": "#/components/examples/unauthorizedError"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/gateway/libraries/{id}": {
      "get": {
        "summary": "Get library by id",
        "tags": [
          "Gateway"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/libraryResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/httpError"
                },
                "examples": {
                  "error": {
                    "$ref": "#/components/examples/unauthorizedError"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/gateway/product_categories": {
      "get": {
        "summary": "List all product categories",
        "tags": [
          "Gateway"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/listProductCategoryResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/httpError"
                },
                "examples": {
                  "error": {
                    "$ref": "#/components/examples/unauthorizedError"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/gateway/products": {
      "get": {
        "summary": "List all products",
        "tags": [
          "Gateway"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/listProductResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/httpError"
                },
                "examples": {
                  "error": {
                    "$ref": "#/components/examples/unauthorizedError"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/gateway/products/{id}": {
      "get": {
        "summary": "Get product by id",
        "tags": [
          "Gateway"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/productResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/httpError"
                },
                "examples": {
                  "error": {
                    "$ref": "#/components/examples/unauthorizedError"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "httpError": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": false,
            "required": true
          },
          "error": {
            "type": "string",
            "example": "Error occurred",
            "required": true
          },
          "error_code": {
            "type": "string",
            "enum": [
              "400",
              "401",
              "404",
              "429",
              "500"
            ],
            "required": true,
            "description": "InvalidArgument,400 | Unauthorized,401 | NotFound,404 | TooManyRequests,429 | UnknownException,500"
          },
          "details": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "healthResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "data": {
            "type": "object",
            "properties": {
              "version": {
                "type": "string",
                "example": "1.0.0"
              },
              "http": {
                "type": "string",
                "enum": [
                  "OK",
                  "ERROR"
                ]
              },
              "postgres": {
                "type": "string",
                "enum": [
                  "OK",
                  "ERROR"
                ]
              }
            },
            "required": [
              "version",
              "http",
              "postgres"
            ],
            "additionalProperties": false
          },
          "query_time": {
            "type": "integer"
          }
        },
        "required": [
          "success",
          "query_time"
        ],
        "additionalProperties": false
      },
      "pdfGenerationResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "data": {
            "type": "string",
            "example": "https://url.com/file.pdf"
          },
          "query_time": {
            "type": "integer"
          }
        },
        "required": [
          "success",
          "data",
          "query_time"
        ],
        "additionalProperties": false
      },
      "pdfGenerationRequestBody": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "minLength": 1
          },
          "name": {
            "type": "string",
            "minLength": 1
          },
          "email": {
            "type": "string",
            "format": "email"
          }
        },
        "required": [
          "key",
          "name",
          "email"
        ],
        "additionalProperties": false
      },
      "postLoginRequesBody": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          }
        },
        "required": [
          "email"
        ],
        "additionalProperties": false
      },
      "postLoginBody": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "minLength": 6
          },
          "email": {
            "type": "string",
            "format": "email"
          }
        },
        "required": [
          "code",
          "email"
        ],
        "additionalProperties": false
      },
      "postRefreshTokenBody": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "minLength": 1
          }
        },
        "required": [
          "token"
        ],
        "additionalProperties": false
      },
      "userAuthRequestCodeResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "data": {
            "type": "string",
            "example": "ok"
          },
          "query_time": {
            "type": "integer"
          }
        },
        "required": [
          "success",
          "data",
          "query_time"
        ],
        "additionalProperties": false
      },
      "userAuthenticatedResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "data": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "role": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "session": {
                "type": "object",
                "properties": {
                  "access_token": {
                    "type": "string"
                  },
                  "refresh_token": {
                    "type": "string"
                  },
                  "expired_at": {
                    "type": "number",
                    "format": "float"
                  }
                },
                "required": [
                  "access_token",
                  "refresh_token"
                ],
                "additionalProperties": false
              }
            },
            "required": [
              "id",
              "role"
            ],
            "additionalProperties": false
          },
          "query_time": {
            "type": "integer"
          }
        },
        "required": [
          "success",
          "query_time"
        ],
        "additionalProperties": false
      },
      "meResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "data": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "role": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "photo": {
                "type": "string",
                "nullable": true
              }
            },
            "required": [
              "id",
              "role"
            ],
            "additionalProperties": false
          },
          "query_time": {
            "type": "integer"
          }
        },
        "required": [
          "success",
          "query_time"
        ],
        "additionalProperties": false
      },
      "postFileUploadUrlBody": {
        "type": "object",
        "properties": {
          "file_name": {
            "type": "string",
            "minLength": 1
          }
        },
        "required": [
          "file_name"
        ],
        "additionalProperties": false
      },
      "fileUploadUrlResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "data": {
            "type": "object",
            "properties": {
              "file_id": {
                "type": "string"
              },
              "file_name": {
                "type": "string"
              },
              "signed_url": {
                "type": "string"
              },
              "file_url": {
                "type": "string"
              }
            },
            "required": [
              "file_id",
              "file_name",
              "signed_url",
              "file_url"
            ],
            "additionalProperties": false
          },
          "query_time": {
            "type": "integer"
          }
        },
        "required": [
          "success",
          "query_time"
        ],
        "additionalProperties": false
      },
      "fileResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "data": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid"
              },
              "upload_name": {
                "type": "string"
              },
              "content_type": {
                "type": "string"
              },
              "file_url": {
                "type": "string"
              },
              "created_by": {
                "type": "string"
              },
              "created_at": {
                "type": "string"
              }
            },
            "required": [
              "id",
              "upload_name",
              "content_type",
              "file_url",
              "created_by",
              "created_at"
            ],
            "additionalProperties": false
          },
          "query_time": {
            "type": "integer"
          }
        },
        "required": [
          "success",
          "query_time"
        ],
        "additionalProperties": false
      },
      "listFileResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "data": {
            "type": "object",
            "properties": {
              "page": {
                "type": "number",
                "format": "float",
                "nullable": true
              },
              "total": {
                "type": "number",
                "format": "float"
              },
              "limit": {
                "type": "number",
                "format": "float",
                "nullable": true
              },
              "pages": {
                "type": "number",
                "format": "float",
                "nullable": true
              },
              "records": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "upload_name": {
                      "type": "string"
                    },
                    "content_type": {
                      "type": "string"
                    },
                    "file_url": {
                      "type": "string"
                    },
                    "created_by": {
                      "type": "string"
                    },
                    "created_at": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "upload_name",
                    "content_type",
                    "file_url",
                    "created_by",
                    "created_at"
                  ],
                  "additionalProperties": false
                }
              },
              "metaData": {
                "example": null
              }
            },
            "required": [
              "total",
              "records"
            ],
            "additionalProperties": false
          },
          "query_time": {
            "type": "integer"
          }
        },
        "required": [
          "success",
          "query_time"
        ],
        "additionalProperties": false
      },
      "libraryResponse": {
        "type": "object",
        "properties": {
          "author": {
            "type": "object",
            "properties": {
              "id": {
                "type": "number",
                "format": "float"
              },
              "title": {
                "type": "string",
                "nullable": true
              },
              "name": {
                "type": "string"
              },
              "image": {
                "type": "string",
                "nullable": true
              },
              "bio": {
                "type": "string",
                "nullable": true
              },
              "updated_at": {
                "type": "string"
              },
              "created_at": {
                "type": "string"
              },
              "interest": {
                "type": "string",
                "nullable": true
              }
            },
            "required": [
              "id",
              "name",
              "updated_at",
              "created_at"
            ],
            "additionalProperties": false,
            "nullable": true
          },
          "content_type": {
            "type": "string"
          },
          "created_at": {
            "type": "string"
          },
          "fitnote_title": {
            "type": "string",
            "nullable": true
          },
          "fitnote_content": {
            "type": "string",
            "nullable": true
          },
          "get_well_soon": {
            "type": "boolean"
          },
          "id": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "marketing_active": {
            "type": "boolean"
          },
          "meta_title": {
            "type": "string",
            "nullable": true
          },
          "meta_description": {
            "type": "string",
            "nullable": true
          },
          "more_information_title": {
            "type": "string",
            "nullable": true
          },
          "more_information_content": {
            "type": "string",
            "nullable": true
          },
          "next_steps_title": {
            "type": "string",
            "nullable": true
          },
          "next_steps_content": {
            "type": "string",
            "nullable": true
          },
          "products": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "antihistamine_units": {
                  "type": "number",
                  "format": "float",
                  "nullable": true
                },
                "decongestant_units": {
                  "type": "number",
                  "format": "float",
                  "nullable": true
                },
                "fake_bundle": {
                  "type": "boolean"
                },
                "general_units": {
                  "type": "number",
                  "format": "float",
                  "nullable": true
                },
                "gsl_units": {
                  "type": "number",
                  "format": "float",
                  "nullable": true
                },
                "id": {
                  "type": "number",
                  "format": "float",
                  "nullable": true
                },
                "in_stock": {
                  "type": "boolean"
                },
                "name": {
                  "type": "string"
                },
                "nsaid_units": {
                  "type": "number",
                  "format": "float",
                  "nullable": true
                },
                "opioid_units": {
                  "type": "number",
                  "format": "float",
                  "nullable": true
                },
                "paracetamol_units": {
                  "type": "number",
                  "format": "float",
                  "nullable": true
                },
                "price_cents": {
                  "type": "number",
                  "format": "float"
                },
                "price_currency": {
                  "type": "string"
                },
                "product_type": {
                  "type": "string"
                },
                "thumbnail": {
                  "type": "string",
                  "nullable": true
                },
                "uuid": {
                  "type": "string",
                  "format": "uuid"
                },
                "why_this_bundle": {
                  "type": "string",
                  "nullable": true
                }
              },
              "required": [
                "name",
                "uuid"
              ],
              "additionalProperties": false
            }
          },
          "professional_help_title": {
            "type": "string",
            "nullable": true
          },
          "professional_help_content": {
            "type": "string",
            "nullable": true
          },
          "reviewer": {
            "type": "object",
            "properties": {
              "id": {
                "type": "number",
                "format": "float"
              },
              "title": {
                "type": "string",
                "nullable": true
              },
              "name": {
                "type": "string"
              },
              "image": {
                "type": "string",
                "nullable": true
              },
              "bio": {
                "type": "string",
                "nullable": true
              },
              "updated_at": {
                "type": "string"
              },
              "created_at": {
                "type": "string"
              },
              "interest": {
                "type": "string",
                "nullable": true
              }
            },
            "required": [
              "id",
              "name",
              "updated_at",
              "created_at"
            ],
            "additionalProperties": false,
            "nullable": true
          },
          "reviewed_at": {
            "type": "string",
            "nullable": true
          },
          "summary": {
            "type": "string"
          },
          "summary_content": {
            "type": "string"
          },
          "updated_at": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "uuid": {
            "type": "string",
            "format": "uuid"
          },
          "video_title": {
            "type": "string",
            "nullable": true
          },
          "video_link": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "content_type",
          "uuid"
        ],
        "additionalProperties": false
      },
      "listLibrariesBody": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "format": "float",
            "minimum": 1,
            "maximum": 500,
            "default": 10
          },
          "page": {
            "type": "number",
            "format": "float",
            "minimum": 1,
            "default": 1
          },
          "order": {
            "type": "string",
            "enum": [
              "ASC",
              "DESC"
            ],
            "default": "DESC"
          },
          "sort": {
            "type": "string",
            "enum": [
              "updated",
              "created",
              "summary",
              "country",
              "draft",
              "content_type"
            ],
            "default": "updated"
          },
          "ids": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "draft": {
            "type": "boolean"
          },
          "content_type": {
            "type": "integer"
          },
          "search_summary": {
            "type": "string"
          },
          "country": {
            "type": "string",
            "enum": [
              "gb",
              "us"
            ]
          },
          "created_before": {
            "type": "string",
            "pattern": "\\d+",
            "description": "MS since epoch",
            "example": "1649155901169"
          },
          "created_after": {
            "type": "string",
            "pattern": "\\d+",
            "description": "MS since epoch",
            "example": "1649155901169"
          }
        },
        "additionalProperties": false
      },
      "postLibraryBody": {
        "type": "object",
        "properties": {
          "summary": {
            "type": "string"
          },
          "summary_content": {
            "type": "string",
            "nullable": true
          },
          "next_steps_title": {
            "type": "string",
            "nullable": true
          },
          "next_steps_content": {
            "type": "string",
            "nullable": true
          },
          "professional_help_title": {
            "type": "string",
            "nullable": true
          },
          "professional_help_content": {
            "type": "string",
            "nullable": true
          },
          "fitnote_title": {
            "type": "string",
            "nullable": true
          },
          "fitnote_content": {
            "type": "string",
            "nullable": true
          },
          "more_information_title": {
            "type": "string",
            "nullable": true
          },
          "more_information_content": {
            "type": "string",
            "nullable": true
          },
          "video_title": {
            "type": "string"
          },
          "video_link": {
            "type": "string"
          },
          "content_type": {
            "type": "number",
            "format": "float",
            "enum": [
              0,
              1,
              2,
              3,
              4
            ]
          },
          "dictionary": {
            "type": "string",
            "nullable": true
          },
          "meta_title": {
            "type": "string",
            "nullable": true
          },
          "meta_description": {
            "type": "string",
            "nullable": true
          },
          "get_well_soon": {
            "type": "boolean",
            "default": false
          },
          "marketing_active": {
            "type": "boolean",
            "default": false
          },
          "country": {
            "type": "string",
            "enum": [
              "gb",
              "us"
            ]
          },
          "reviewer_id": {
            "type": "string",
            "nullable": true
          },
          "reviewed_by": {
            "type": "string",
            "nullable": true
          },
          "reviewed_at": {
            "type": "string",
            "nullable": true
          },
          "author_id": {
            "type": "string",
            "nullable": true
          },
          "linked_product_ids": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        },
        "required": [
          "summary",
          "content_type",
          "country"
        ],
        "additionalProperties": false
      },
      "linkLibraryProductsBody": {
        "type": "object",
        "properties": {
          "product_ids": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        },
        "additionalProperties": false
      },
      "listLibraryResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "number",
              "format": "float",
              "nullable": true
            },
            "uuid": {
              "type": "string",
              "format": "uuid"
            },
            "summary": {
              "type": "string",
              "nullable": true
            },
            "summary_content": {
              "type": "string"
            }
          },
          "required": [
            "uuid",
            "summary_content"
          ],
          "additionalProperties": false
        }
      },
      "userResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "data": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "role": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "photo": {
                "type": "string",
                "nullable": true
              },
              "email": {
                "type": "string"
              },
              "updated_at": {
                "type": "string"
              },
              "created_by": {
                "type": "string",
                "nullable": true
              }
            },
            "required": [
              "id",
              "role",
              "updated_at"
            ],
            "additionalProperties": false
          },
          "query_time": {
            "type": "integer"
          }
        },
        "required": [
          "success",
          "query_time"
        ],
        "additionalProperties": false
      },
      "listUsersBody": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "format": "float",
            "minimum": 1,
            "maximum": 500,
            "default": 10
          },
          "page": {
            "type": "number",
            "format": "float",
            "minimum": 1,
            "default": 1
          },
          "order": {
            "type": "string",
            "enum": [
              "ASC",
              "DESC"
            ],
            "default": "DESC"
          },
          "sort": {
            "type": "string",
            "enum": [
              "updated",
              "created",
              "name",
              "role"
            ],
            "default": "updated"
          },
          "ids": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "email": {
            "type": "string"
          },
          "search_name": {
            "type": "string"
          },
          "role": {
            "type": "string",
            "enum": [
              "admin",
              "editor"
            ]
          },
          "created_before": {
            "type": "string",
            "pattern": "\\d+",
            "description": "MS since epoch",
            "example": "1649155901169"
          },
          "created_after": {
            "type": "string",
            "pattern": "\\d+",
            "description": "MS since epoch",
            "example": "1649155901169"
          }
        },
        "additionalProperties": false
      },
      "postUserBody": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "photo": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "primary_role": {
            "type": "string",
            "enum": [
              "admin",
              "editor"
            ]
          }
        },
        "required": [
          "name",
          "email",
          "primary_role"
        ],
        "additionalProperties": false
      },
      "listUserResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "data": {
            "type": "object",
            "properties": {
              "page": {
                "type": "number",
                "format": "float",
                "nullable": true
              },
              "total": {
                "type": "number",
                "format": "float"
              },
              "limit": {
                "type": "number",
                "format": "float",
                "nullable": true
              },
              "pages": {
                "type": "number",
                "format": "float",
                "nullable": true
              },
              "records": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "role": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "photo": {
                      "type": "string",
                      "nullable": true
                    },
                    "email": {
                      "type": "string"
                    },
                    "updated_at": {
                      "type": "string"
                    },
                    "created_by": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "required": [
                    "id",
                    "role",
                    "updated_at"
                  ],
                  "additionalProperties": false
                }
              },
              "metaData": {
                "example": null
              }
            },
            "required": [
              "total",
              "records"
            ],
            "additionalProperties": false
          },
          "query_time": {
            "type": "integer"
          }
        },
        "required": [
          "success",
          "query_time"
        ],
        "additionalProperties": false
      },
      "editorResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "format": "float"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string"
          },
          "image": {
            "type": "string",
            "nullable": true
          },
          "bio": {
            "type": "string",
            "nullable": true
          },
          "updated_at": {
            "type": "string"
          },
          "created_at": {
            "type": "string"
          },
          "interest": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "id",
          "name",
          "updated_at",
          "created_at"
        ],
        "additionalProperties": false
      },
      "listEditorsBody": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "format": "float",
            "minimum": 1,
            "maximum": 500,
            "default": 10
          },
          "page": {
            "type": "number",
            "format": "float",
            "minimum": 1,
            "default": 1
          },
          "order": {
            "type": "string",
            "enum": [
              "ASC",
              "DESC"
            ],
            "default": "DESC"
          },
          "sort": {
            "type": "string",
            "enum": [
              "updated",
              "name",
              "title",
              "created"
            ],
            "default": "updated"
          },
          "ids": {
            "type": "array",
            "items": {
              "type": "number",
              "format": "float"
            }
          },
          "search_name": {
            "type": "string"
          },
          "created_before": {
            "type": "string",
            "pattern": "\\d+",
            "description": "MS since epoch",
            "example": "1649155901169"
          },
          "created_after": {
            "type": "string",
            "pattern": "\\d+",
            "description": "MS since epoch",
            "example": "1649155901169"
          }
        },
        "additionalProperties": false
      },
      "postEditorBody": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "bio": {
            "type": "string",
            "nullable": true
          },
          "photo": {
            "type": "string",
            "nullable": true
          },
          "interest": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "name"
        ],
        "additionalProperties": false
      },
      "listEditorResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "number",
              "format": "float"
            },
            "title": {
              "type": "string",
              "nullable": true
            },
            "name": {
              "type": "string"
            },
            "image": {
              "type": "string",
              "nullable": true
            },
            "bio": {
              "type": "string",
              "nullable": true
            },
            "updated_at": {
              "type": "string"
            },
            "created_at": {
              "type": "string"
            },
            "interest": {
              "type": "string",
              "nullable": true
            }
          },
          "required": [
            "id",
            "name",
            "updated_at",
            "created_at"
          ],
          "additionalProperties": false
        }
      },
      "listActivityLogsBody": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "format": "float",
            "minimum": 1,
            "maximum": 500,
            "default": 10
          },
          "page": {
            "type": "number",
            "format": "float",
            "minimum": 1,
            "default": 1
          },
          "order": {
            "type": "string",
            "enum": [
              "ASC",
              "DESC"
            ],
            "default": "DESC"
          },
          "sort": {
            "type": "string",
            "enum": [
              "created"
            ],
            "default": "created"
          },
          "ids": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "user_ids": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "action": {
            "type": "string"
          },
          "asset_type": {
            "type": "string"
          },
          "created_before": {
            "type": "string",
            "pattern": "\\d+",
            "description": "MS since epoch",
            "example": "1649155901169"
          },
          "created_after": {
            "type": "string",
            "pattern": "\\d+",
            "description": "MS since epoch",
            "example": "1649155901169"
          }
        },
        "additionalProperties": false
      },
      "listActivityLogResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "uuid"
                },
                "user_id": {
                  "type": "string",
                  "format": "uuid"
                },
                "action": {
                  "type": "string"
                },
                "asset_type": {
                  "type": "string"
                },
                "asset_id": {
                  "type": "string",
                  "format": "uuid"
                },
                "payload": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                },
                "created_at": {
                  "type": "string"
                }
              },
              "required": [
                "id",
                "user_id",
                "action",
                "asset_type",
                "asset_id",
                "payload",
                "created_at"
              ],
              "additionalProperties": false
            }
          },
          "query_time": {
            "type": "integer"
          }
        },
        "required": [
          "success",
          "data",
          "query_time"
        ],
        "additionalProperties": false
      },
      "categoryResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "data": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "slug": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "photo": {
                "type": "string",
                "nullable": true
              },
              "updated_at": {
                "type": "string"
              },
              "display_order": {
                "type": "number",
                "format": "float",
                "nullable": true
              }
            },
            "required": [
              "id",
              "slug",
              "name",
              "updated_at"
            ],
            "additionalProperties": false
          },
          "query_time": {
            "type": "integer"
          }
        },
        "required": [
          "success",
          "query_time"
        ],
        "additionalProperties": false
      },
      "listCategoriesBody": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "format": "float",
            "minimum": 1,
            "maximum": 500,
            "default": 10
          },
          "page": {
            "type": "number",
            "format": "float",
            "minimum": 1,
            "default": 1
          },
          "order": {
            "type": "string",
            "enum": [
              "ASC",
              "DESC"
            ],
            "default": "DESC"
          },
          "sort": {
            "type": "string",
            "enum": [
              "updated",
              "created",
              "name",
              "display_order"
            ],
            "default": "updated"
          },
          "ids": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "search_name": {
            "type": "string"
          },
          "created_before": {
            "type": "string",
            "pattern": "\\d+",
            "description": "MS since epoch",
            "example": "1649155901169"
          },
          "created_after": {
            "type": "string",
            "pattern": "\\d+",
            "description": "MS since epoch",
            "example": "1649155901169"
          }
        },
        "additionalProperties": false
      },
      "postCategoryBody": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "slug": {
            "type": "string"
          },
          "display_order": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "photo": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "name",
          "slug"
        ],
        "additionalProperties": false
      },
      "listCategoryResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "data": {
            "type": "object",
            "properties": {
              "page": {
                "type": "number",
                "format": "float",
                "nullable": true
              },
              "total": {
                "type": "number",
                "format": "float"
              },
              "limit": {
                "type": "number",
                "format": "float",
                "nullable": true
              },
              "pages": {
                "type": "number",
                "format": "float",
                "nullable": true
              },
              "records": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "slug": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "photo": {
                      "type": "string",
                      "nullable": true
                    },
                    "updated_at": {
                      "type": "string"
                    },
                    "display_order": {
                      "type": "number",
                      "format": "float",
                      "nullable": true
                    }
                  },
                  "required": [
                    "id",
                    "slug",
                    "name",
                    "updated_at"
                  ],
                  "additionalProperties": false
                }
              },
              "metaData": {
                "example": null
              }
            },
            "required": [
              "total",
              "records"
            ],
            "additionalProperties": false
          },
          "query_time": {
            "type": "integer"
          }
        },
        "required": [
          "success",
          "query_time"
        ],
        "additionalProperties": false
      },
      "settingResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "data": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "value": {
                "type": "string"
              },
              "group": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  }
                },
                "required": [
                  "id",
                  "name"
                ],
                "additionalProperties": false
              },
              "group_id": {
                "type": "string",
                "nullable": true
              },
              "updated_at": {
                "type": "string"
              }
            },
            "required": [
              "id",
              "value",
              "updated_at"
            ],
            "additionalProperties": false
          },
          "query_time": {
            "type": "integer"
          }
        },
        "required": [
          "success",
          "query_time"
        ],
        "additionalProperties": false
      },
      "listSettingsBody": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "format": "float",
            "minimum": 1,
            "maximum": 500,
            "default": 10
          },
          "page": {
            "type": "number",
            "format": "float",
            "minimum": 1,
            "default": 1
          },
          "order": {
            "type": "string",
            "enum": [
              "ASC",
              "DESC"
            ],
            "default": "DESC"
          },
          "sort": {
            "type": "string",
            "enum": [
              "updated",
              "created",
              "value",
              "id"
            ],
            "default": "updated"
          },
          "ids": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "all": {
            "type": "boolean"
          },
          "group_id": {
            "type": "string"
          },
          "created_before": {
            "type": "string",
            "pattern": "\\d+",
            "description": "MS since epoch",
            "example": "1649155901169"
          },
          "created_after": {
            "type": "string",
            "pattern": "\\d+",
            "description": "MS since epoch",
            "example": "1649155901169"
          }
        },
        "additionalProperties": false
      },
      "postSettingBody": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "group_id": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "id"
        ],
        "additionalProperties": false
      },
      "postSettingUpdateBody": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "group_id": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "listSettingResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "data": {
            "type": "object",
            "properties": {
              "page": {
                "type": "number",
                "format": "float",
                "nullable": true
              },
              "total": {
                "type": "number",
                "format": "float"
              },
              "limit": {
                "type": "number",
                "format": "float",
                "nullable": true
              },
              "pages": {
                "type": "number",
                "format": "float",
                "nullable": true
              },
              "records": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    },
                    "group": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "updated_at": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "name"
                      ],
                      "additionalProperties": false
                    },
                    "group_id": {
                      "type": "string",
                      "nullable": true
                    },
                    "updated_at": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "value",
                    "updated_at"
                  ],
                  "additionalProperties": false
                }
              },
              "metaData": {
                "example": null
              }
            },
            "required": [
              "total",
              "records"
            ],
            "additionalProperties": false
          },
          "query_time": {
            "type": "integer"
          }
        },
        "required": [
          "success",
          "query_time"
        ],
        "additionalProperties": false
      },
      "listSettingGroupResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "updated_at": {
                  "type": "string"
                }
              },
              "required": [
                "id",
                "name"
              ],
              "additionalProperties": false
            }
          },
          "query_time": {
            "type": "integer"
          }
        },
        "required": [
          "success",
          "data",
          "query_time"
        ],
        "additionalProperties": false
      },
      "productResponse": {
        "type": "object",
        "properties": {
          "antihistamine_units": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "category": {
            "type": "string"
          },
          "decongestant_units": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "dosage_form": {
            "type": "string"
          },
          "fake_bundle": {
            "type": "boolean"
          },
          "general_units": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "gsl_units": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "id": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "images": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "filename": {
                  "type": "string",
                  "nullable": true
                },
                "url": {
                  "type": "string"
                }
              },
              "additionalProperties": false
            }
          },
          "in_stock": {
            "type": "boolean"
          },
          "marketing_active": {
            "type": "boolean"
          },
          "meta_description": {
            "type": "string",
            "nullable": true
          },
          "meta_title": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string"
          },
          "nsaid_units": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "opioid_units": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "paracetamol_units": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "price_cents": {
            "type": "number",
            "format": "float"
          },
          "price_currency": {
            "type": "string"
          },
          "product_type": {
            "type": "string"
          },
          "summary": {
            "type": "string",
            "nullable": true
          },
          "thumbnail": {
            "type": "string",
            "nullable": true
          },
          "pseudoephedrine_units": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "uuid": {
            "type": "string",
            "format": "uuid"
          }
        },
        "required": [
          "name",
          "uuid"
        ],
        "additionalProperties": false
      },
      "listProductsBody": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "format": "float",
            "minimum": 1,
            "maximum": 500,
            "default": 10
          },
          "page": {
            "type": "number",
            "format": "float",
            "minimum": 1,
            "default": 1
          },
          "order": {
            "type": "string",
            "enum": [
              "ASC",
              "DESC"
            ],
            "default": "DESC"
          },
          "sort": {
            "type": "string",
            "enum": [
              "created",
              "updated",
              "name",
              "country",
              "draft",
              "price",
              "quantity"
            ],
            "default": "created"
          },
          "ids": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "category_ids": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "is_popular": {
            "type": "boolean"
          },
          "product_type": {
            "type": "integer"
          },
          "search_name": {
            "type": "string"
          },
          "country": {
            "type": "string",
            "enum": [
              "gb",
              "us"
            ]
          },
          "created_before": {
            "type": "string",
            "pattern": "\\d+",
            "description": "MS since epoch",
            "example": "1649155901169"
          },
          "created_after": {
            "type": "string",
            "pattern": "\\d+",
            "description": "MS since epoch",
            "example": "1649155901169"
          }
        },
        "additionalProperties": false
      },
      "postProductBody": {
        "type": "object",
        "properties": {
          "draft": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "main_image": {
            "type": "string",
            "nullable": true
          },
          "images": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "image": {
                  "type": "string"
                },
                "display_order": {
                  "type": "number",
                  "format": "float"
                }
              },
              "additionalProperties": false
            }
          },
          "category_ids": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "product_type": {
            "type": "number",
            "format": "float",
            "enum": [
              1,
              0
            ]
          },
          "price_cents": {
            "type": "number",
            "format": "float"
          },
          "quantity": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "fulfilment_product_id": {
            "type": "string",
            "nullable": true
          },
          "summary": {
            "type": "string",
            "nullable": true
          },
          "short_description": {
            "type": "string",
            "nullable": true
          },
          "age_from": {
            "type": "string",
            "nullable": true
          },
          "age_to": {
            "type": "string",
            "nullable": true
          },
          "antihistamine_units": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "codeine": {
            "type": "boolean",
            "nullable": true
          },
          "cost_price_cents": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "country": {
            "type": "string",
            "enum": [
              "gb",
              "us"
            ]
          },
          "decongestant_units": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "dosage_form": {
            "type": "string",
            "nullable": true
          },
          "dosage_instructions": {
            "type": "string",
            "nullable": true
          },
          "fake_bundle": {
            "type": "boolean",
            "nullable": true
          },
          "general_units": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "gsl_units": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "in_stock": {
            "type": "boolean",
            "nullable": true
          },
          "product_legal_category": {
            "type": "string",
            "nullable": true
          },
          "mailchimp_tag": {
            "type": "string",
            "nullable": true
          },
          "marketing_active": {
            "type": "boolean",
            "nullable": true
          },
          "max_per_transaction": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "min_stock_kept": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "nsaid": {
            "type": "boolean",
            "nullable": true
          },
          "nsaid_units": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "opioid_units": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "paracetamol_units": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "pil_url": {
            "type": "string",
            "nullable": true
          },
          "pip_code": {
            "type": "string",
            "nullable": true
          },
          "product_count": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "product_identifier": {
            "type": "string",
            "nullable": true
          },
          "product_license_number": {
            "type": "string",
            "nullable": true
          },
          "pseudoephedrine_units": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "track_quantity": {
            "type": "boolean",
            "nullable": true
          },
          "traditional_herbal_remedy": {
            "type": "string",
            "nullable": true
          },
          "meta_title": {
            "type": "string",
            "nullable": true
          },
          "meta_description": {
            "type": "string",
            "nullable": true
          },
          "is_popular": {
            "type": "boolean",
            "nullable": true
          },
          "list_of_ingredient": {
            "type": "string",
            "nullable": true
          },
          "list_of_sympton": {
            "type": "string",
            "nullable": true
          },
          "bundle_product_ids": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "default": []
          }
        },
        "required": [
          "draft",
          "name",
          "product_type",
          "price_cents",
          "country"
        ],
        "additionalProperties": false
      },
      "listProductResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "antihistamine_units": {
              "type": "number",
              "format": "float",
              "nullable": true
            },
            "category": {
              "type": "string"
            },
            "decongestant_units": {
              "type": "number",
              "format": "float",
              "nullable": true
            },
            "dosage_form": {
              "type": "string"
            },
            "fake_bundle": {
              "type": "boolean"
            },
            "general_units": {
              "type": "number",
              "format": "float",
              "nullable": true
            },
            "gsl_units": {
              "type": "number",
              "format": "float",
              "nullable": true
            },
            "id": {
              "type": "number",
              "format": "float",
              "nullable": true
            },
            "in_stock": {
              "type": "boolean"
            },
            "is_popular": {
              "type": "boolean"
            },
            "marketing_active": {
              "type": "boolean"
            },
            "name": {
              "type": "string"
            },
            "nsaid_units": {
              "type": "number",
              "format": "float",
              "nullable": true
            },
            "opioid_units": {
              "type": "number",
              "format": "float",
              "nullable": true
            },
            "paracetamol_units": {
              "type": "number",
              "format": "float",
              "nullable": true
            },
            "price_cents": {
              "type": "number",
              "format": "float"
            },
            "price_currency": {
              "type": "string"
            },
            "product_type": {
              "type": "string"
            },
            "thumbnail": {
              "type": "string",
              "nullable": true
            },
            "pseudoephedrine_units": {
              "type": "number",
              "format": "float",
              "nullable": true
            },
            "uuid": {
              "type": "string",
              "format": "uuid"
            }
          },
          "required": [
            "name",
            "uuid"
          ],
          "additionalProperties": false
        }
      },
      "listLibraryAlphabetizedResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "number",
              "format": "float",
              "nullable": true
            },
            "uuid": {
              "type": "string",
              "format": "uuid"
            },
            "summary": {
              "type": "string",
              "nullable": true
            },
            "title": {
              "type": "string"
            },
            "items": {
              "type": "number",
              "format": "float"
            },
            "content_type": {
              "type": "string"
            },
            "url": {
              "type": "string"
            }
          },
          "required": [
            "uuid",
            "title",
            "items",
            "content_type",
            "url"
          ],
          "additionalProperties": false
        }
      },
      "listProductCategoryResponse": {
        "type": "array",
        "items": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "examples": {
      "unauthorizedError": {
        "value": {
          "success": false,
          "component": "Authorization",
          "error_code": "401",
          "error": "Unauthorized",
          "details": []
        }
      },
      "notFound": {
        "value": {
          "success": false,
          "component": "Component",
          "error_code": "404",
          "error": "Entity not found",
          "details": []
        }
      },
      "validationError": {
        "value": {
          "success": false,
          "component": "Validation",
          "error_code": "400",
          "error": "Missing property",
          "details": [
            {
              "message": "message",
              "path": "path",
              "type": "blank"
            }
          ]
        }
      },
      "errorExample": {
        "value": {
          "success": false,
          "component": "errorExample",
          "error_code": "500",
          "error": "Error Example"
        }
      }
    }
  }
}