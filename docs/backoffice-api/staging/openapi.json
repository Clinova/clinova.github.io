{
  "openapi": "3.0.3",
  "info": {
    "title": "API documentation",
    "description": "API documentation",
    "version": "1.2.3"
  },
  "servers": [
    {
      "url": "http://localhost:9000",
      "description": "TestServer"
    },
    {
      "url": "https://tbd.api.io",
      "description": "Production server"
    }
  ],
  "paths": {
    "/ping": {
      "get": {
        "summary": "Check server health",
        "tags": ["Health"],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/healthResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/pdf": {
      "post": {
        "summary": "Check server health",
        "tags": ["Pdf"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/pdfGenerationRequestBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/pdfGenerationResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "httpError": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": false,
            "required": true
          },
          "error": {
            "type": "string",
            "example": "Error occurred",
            "required": true
          },
          "error_code": {
            "type": "string",
            "enum": ["400", "401", "404", "429", "500"],
            "required": true,
            "description": "InvalidArgument,400 | Unauthorized,401 | NotFound,404 | TooManyRequests,429 | UnknownException,500"
          },
          "details": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "healthResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "data": {
            "type": "object",
            "properties": {
              "version": {
                "type": "string",
                "example": "1.0.0"
              },
              "http": {
                "type": "string",
                "enum": ["OK", "ERROR"]
              }
            },
            "required": ["version", "http"],
            "additionalProperties": false
          },
          "query_time": {
            "type": "integer"
          }
        },
        "required": ["success", "query_time"],
        "additionalProperties": false
      },
      "pdfGenerationResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "data": {
            "type": "string",
            "example": "https://url.com/file.pdf"
          },
          "query_time": {
            "type": "integer"
          }
        },
        "required": ["success", "data", "query_time"],
        "additionalProperties": false
      },
      "pdfGenerationRequestBody": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "minLength": 1
          },
          "name": {
            "type": "string",
            "minLength": 1
          },
          "email": {
            "type": "string",
            "format": "email"
          }
        },
        "required": ["key", "name", "email"],
        "additionalProperties": false
      }
    },
    "examples": {
      "unauthorizedError": {
        "value": {
          "success": false,
          "component": "Authorization",
          "error_code": "401",
          "error": "Unauthorized",
          "details": []
        }
      },
      "notFound": {
        "value": {
          "success": false,
          "component": "Component",
          "error_code": "404",
          "error": "Entity not found",
          "details": []
        }
      },
      "validationError": {
        "value": {
          "success": false,
          "component": "Validation",
          "error_code": "400",
          "error": "Missing property",
          "details": [
            {
              "message": "message",
              "path": "path",
              "type": "blank"
            }
          ]
        }
      },
      "errorExample": {
        "value": {
          "success": false,
          "component": "errorExample",
          "error_code": "500",
          "error": "Error Example"
        }
      }
    }
  }
}
